generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  Int?
  author    User?   @relation(fields: [authorId], references: [id])
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}

model Profile {
  id        String    @id @default(uuid())
  userId    String    @unique
  name      String
  imageUrl  String    @db.Text
  email     String    @db.Text
  server    Server[]
  member    Member[]
  channel   Channel[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Server {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String    @db.Text
  inviteCode String    @db.Text
  profileId  String
  profile    Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)
  member     Member[]
  channel    Channel[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id        String     @id @default(uuid())
  role      MemberRole @default(GUEST)
  profileId String
  serverId  String
  profile   Profile    @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server    Server     @relation(fields: [serverId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([profileId])
}

enum ChannelType {
  TEXT
  VOICE
}

model Channel {
  id        String      @id @default(uuid())
  name      String
  type      ChannelType @default(TEXT)
  profileId String
  serverId  String
  profile   Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server    Server      @relation(fields: [serverId], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([serverId])
  @@index([profileId])
}
